"""initial migration

Revision ID: 81df4f07cb04
Revises: 
Create Date: 2025-09-27 15:42:45.290275

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '81df4f07cb04'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('base_url', sa.String(length=100), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('priority_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('currency_pairs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('base_currency', sa.String(length=3), nullable=False),
    sa.Column('target_currency', sa.String(length=3), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('base_currency', 'target_currency', name='uq_base_target_currency'),
    sqlite_autoincrement=True
    )
    op.create_table('api_call_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('endpoint', sa.String(length=255), nullable=False),
    sa.Column('http_status_code', sa.Integer(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('called_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('was_successful', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['api_providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('circuit_breaker_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('previous_state', sa.String(length=20), nullable=True),
    sa.Column('new_state', sa.String(length=20), nullable=False),
    sa.Column('failure_count', sa.Integer(), nullable=False),
    sa.Column('state_changed_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['api_providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exchange_rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currency_pair_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('rate', sa.DECIMAL(precision=15, scale=8), nullable=False),
    sa.Column('fetched_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('is_successful', sa.Boolean(), nullable=False),
    sa.Column('confidence_level', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['currency_pair_id'], ['currency_pairs.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['api_providers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exchange_rates')
    op.drop_table('circuit_breaker_logs')
    op.drop_table('api_call_logs')
    op.drop_table('currency_pairs')
    op.drop_table('api_providers')
    # ### end Alembic commands ###
